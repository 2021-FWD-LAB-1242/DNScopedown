{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreed\\\\OneDrive\\\\Desktop\\\\dnsreal\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, Title } from 'chart.js';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, Title);\nconst Dashboard = () => {\n  _s();\n  const [resolvedIP, setResolvedIP] = useState('');\n  const [responseTimes, setResponseTimes] = useState([]);\n  const [error, setError] = useState('');\n  const [domain, setDomain] = useState('');\n  const handleResolve = async () => {\n    if (!domain) return;\n    try {\n      const response = await axios.get(`http://localhost:5000/resolve/${domain}`);\n      setResolvedIP(response.data.ip);\n      fetchResponseTimes();\n    } catch (err) {\n      setError('Error occurred while resolving');\n    }\n  };\n  const fetchResponseTimes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get-response-times');\n      setResponseTimes(response.data);\n    } catch (err) {\n      setError('Error fetching response times');\n    }\n  };\n  const data = {\n    labels: responseTimes.map(rt => new Date(rt.timestamp).toLocaleString()),\n    datasets: [{\n      label: 'DNS Query Response Time (seconds)',\n      data: responseTimes.map(rt => rt.time),\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DNS Query Response Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter domain\",\n        value: domain,\n        onChange: e => setDomain(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResolve,\n        children: \"Resolve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"resolved-ip\",\n      children: [\"Resolved IP: \", resolvedIP]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"F5Xv/oLGOmZWbYy+gGtXKW/6hSU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","Title","axios","jsxDEV","_jsxDEV","register","Dashboard","_s","resolvedIP","setResolvedIP","responseTimes","setResponseTimes","error","setError","domain","setDomain","handleResolve","response","get","data","ip","fetchResponseTimes","err","labels","map","rt","Date","timestamp","toLocaleString","datasets","label","time","borderColor","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sreed/OneDrive/Desktop/dnsreal/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport axios from 'axios';\r\nimport './App.css'; // Import the CSS file\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, Title);\r\n\r\nconst Dashboard = () => {\r\n    const [resolvedIP, setResolvedIP] = useState('');\r\n    const [responseTimes, setResponseTimes] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [domain, setDomain] = useState('');\r\n\r\n    const handleResolve = async () => {\r\n        if (!domain) return;\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/resolve/${domain}`);\r\n            setResolvedIP(response.data.ip);\r\n            fetchResponseTimes();\r\n        } catch (err) {\r\n            setError('Error occurred while resolving');\r\n        }\r\n    };\r\n\r\n    const fetchResponseTimes = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/get-response-times');\r\n            setResponseTimes(response.data);\r\n        } catch (err) {\r\n            setError('Error fetching response times');\r\n        }\r\n    };\r\n\r\n    const data = {\r\n        labels: responseTimes.map(rt => new Date(rt.timestamp).toLocaleString()),\r\n        datasets: [\r\n            {\r\n                label: 'DNS Query Response Time (seconds)',\r\n                data: responseTimes.map(rt => rt.time),\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                fill: false,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>DNS Query Response Time</h2>\r\n            <div className=\"input-container\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Enter domain\"\r\n                    value={domain}\r\n                    onChange={(e) => setDomain(e.target.value)}\r\n                />\r\n                <button onClick={handleResolve}>Resolve</button>\r\n            </div>\r\n            <Line data={data} />\r\n            <p className=\"resolved-ip\">Resolved IP: {resolvedIP}</p>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}